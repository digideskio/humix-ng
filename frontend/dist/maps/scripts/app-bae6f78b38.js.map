{"version":3,"sources":["scripts/app-bae6f78b38.js"],"names":["angular","module","ngSenseItem","deviceList","directive","restrict","templateUrl","scope","senseId","imgId","link","element","attrs","sense","$observe","delDevice","$inject","senseContent","senseContentController","$scope","$modal","$log","vm","this","getDevices","$watch","newVal","oldVal","info","open","modalInstance","animation","controller","modalController","controllerAs","result","then","setDevice","id","Date","$modalInstance","Math","floor","random","ok","close","cancel","dismiss","creationDate","bindToController","ngNavbar","NavbarController","moment","relativeDate","fromNow","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","contributors","contributor","login","$on","MalarkeyController","githubContributor","activate","getContributors","data","template","$http","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","get","apiHost","service","factory","devices","iconId","method","url","senseIcon","console","log","JSON","parse","obj","MainController","$timeout","toastr","classAnimation","showToastr","awesomeThings","runBlock","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","constant","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-bae6f78b38.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('public', ['ngAnimate', 'ngCookies', 'ngSanitize', 'ui.router', 'ui.bootstrap', 'toastr', 'ngFileUpload']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseItem', ['deviceList',ngSenseItem]);\n\n  /** @ngInject */\n  function ngSenseItem(deviceList) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/senseItem/senseItem.html',\n      scope: {\n          senseId: '@',\n          imgId: '@'\n      },\n      link: function(scope, element, attrs) {\n        scope.sense = {};\n\n        attrs.$observe('senseId', function(senseId) {\n          scope.sense.senseId = senseId;          \n        });\n\n        attrs.$observe('imgId', function(imgId) {\n          scope.sense.imgId = imgId;\n        });\n\n        scope.delDevice = deviceList.delDevice;\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngSenseContent', senseContent);\n\n  /** @ngInject */\n  function senseContent() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/senseContent/senseContent.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: senseContentController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function senseContentController(deviceList, $scope, $modal, $log) {\n      var vm = this;\n\n      vm.getDevices = deviceList.getDevices;\n      vm.delDevice = deviceList.delDevice;\n      // vm.deviceEmpty = (angular.equals(vm.getDevices(),{})) ? true: false;\n\n      $scope.$watch(function(){ return deviceList.getDevices}, function(newVal, oldVal){\n        $log.info('data change'+newVal+' '+oldVal);\n      }, true);\n\n      vm.open = function(){\n\n        var modalInstance = $modal.open({\n          animation: 1,\n          templateUrl: 'addModalContent.html',\n          controller: modalController,\n          controllerAs: 'vm'\n        });\n\n        modalInstance.result.then(function (sense) {\n          \n          deviceList.setDevice(sense.id, sense.imgId);\n\n          $log.info('Generating sense id: ' + sense.id + ', imageId:' + sense.imgId);\n\n        }, function () {\n\n          $log.info('Modal dismissed at: ' + new Date());\n\n        });\n      };\n    }\n\n    function modalController($modalInstance){\n      var vm = this;\n\n      vm.imgId = 10 + Math.floor(Math.random() * 54); // random image id\n      \n      vm.senseId = \"\"; // sense id\n      \n\n      vm.ok = function(){\n        $modalInstance.close({id: vm.senseId , imgId: vm.imgId});\n      };\n\n      vm.cancel = function(){\n        $modalInstance.dismiss('cancel');\n      };\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('ngNavbar', ngNavbar);\n\n  /** @ngInject */\n  function ngNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('public')\n      .service('deviceList', deviceList);\n\n\n  /** @ngInject */\n  function deviceList($http) {\n    var devices = {};\n    $http({\n      method: 'GET',\n      url: 'api/devices'\n    }).then(function successCallback(response) {\n        var data = JSON.parse(response.data.result);\n        data.forEach(function(obj){\n          devices[obj.senseId] = obj.senseIcon;\n        });\n      }, function errorCallback(response) {\n        console.log(response);\n    });      \n\n    this.getDevices = getDevices;\n    this.setDevice = setDevice;\n    this.delDevice = delDevice;\n\n    function getDevices() {\n      return devices;\n    }\n\n    function setDevice(senseId, iconId) {\n      // call the backend api here to store the data\n      $http({\n        method: 'POST',\n        url: 'api/registerDevice',\n        data: {'senseId':senseId, 'senseIcon': iconId}\n      }).then(function successCallback(response) {\n          console.log(response);\n        }, function errorCallback(response) {\n          console.log(response);\n      });      \n      devices[senseId] = iconId;\n    }\n\n    function delDevice(senseId) {      \n      // call the backend api here to delete the data\n      $http({\n        method: 'DELETE',\n        url: 'api/devices/'+ senseId\n      });      \n\n      delete devices[senseId];\n    }\n  }\n\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1445587798203;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('public')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"public\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container-fluid\\\"><ng-navbar></ng-navbar><div class=\\\"container\\\"><ng-sense-content></ng-sense-content></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div class=\\\"row\\\" id=\\\"header\\\"><div class=\\\"col-md-2\\\"><div class=\\\"logo-img pull-left\\\"><img src=\\\"\\\"></div></div><div class=\\\"col-md-4\\\"><div class=\\\"logo-text\\\"><h1>HUMIX NG</h1><h4>Homemade Robot</h4></div></div><div class=\\\"col-md-6 header-options\\\"><ul class=\\\"list-inline breadcrumbs\\\"><li><a href=\\\"#\\\">Sense</a></li><li><a href=\\\"#\\\">Think</a></li><li class=\\\"active\\\"><a href=\\\"#\\\">Family</a></li><li><a href=\\\"#\\\">Login</a></li></ul></div></div>\");\n$templateCache.put(\"app/components/senseContent/senseContent.html\",\"<div><div class=\\\"title\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.open()\\\">Add Sense</button><hr></div><div class=\\\"row\\\"><ng-sense-item class=\\\"col-md-4\\\" ng-repeat=\\\"(key, val) in vm.getDevices()\\\" sense-id=\\\"{{ key }}\\\" img-id=\\\"{{ val }}\\\"></ng-sense-item></div></div><script type=\\\"text/ng-template\\\" id=\\\"addModalContent.html\\\"><div class=\\\"modal-header\\\"> <h3 class=\\\"modal-title\\\">Add Sencse</h3> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\"> <div class=\\\"form-group\\\"> <div class=\\\"col-sm-3 modal-thumbnail-block\\\"> <img ng-src=\\\"assets/images/bluemix-icon-list/i-appicon-{{ vm.imgId }}-50.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\" /> </div> <label class=\\\"col-sm-1 control-label\\\" for=\\\"sense-id\\\">ID: </label> <div class=\\\"col-sm-8\\\"> <input type=\\\"text\\\" id=\\\"sense-id\\\" class=\\\"form-control\\\" placeholder=\\\"Humix-Godzilla\\\" ng-model=\\\"vm.senseId\\\"/> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\">OK</button> <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button> </div></script>\");\n$templateCache.put(\"app/components/senseItem/senseItem.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"row panel-heading\\\"><div class=\\\"col-md-10\\\">Sense</div><div class=\\\"col-md-2\\\"><input type=\\\"image\\\" src=\\\"assets/images/trash.png\\\" ng-click=\\\"delDevice(sense.senseId)\\\"></div></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-4\\\"><img ng-src=\\\"assets/images/bluemix-icon-list/i-appicon-{{ sense.imgId }}-50.png\\\" class=\\\"img-thumbnail\\\" alt=\\\"thumbnail\\\"></div><div class=\\\"col-md-8\\\"><div class=\\\"input-group\\\"><span class=\\\"input-group-addon\\\" id=\\\"sizing-addon2\\\">ID</span> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"sense.senseId\\\"></div></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}